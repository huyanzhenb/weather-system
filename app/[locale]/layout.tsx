import type { Metadata } from "next";
import { NextIntlClientProvider } from 'next-intl';
import { getMessages, getTranslations } from 'next-intl/server';
import "../globals.css";
import Link from "next/link";

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

interface LayoutProps {
  children: React.ReactNode;
  params: { locale: string }; // 将类型明确为对象而不是 Promise<any>
}

export default async function RootLayout({ children, params }: LayoutProps) {
  // 等待 params 被解析
  const { locale } = await params; // 必须使用 await 解析 params

  const messages = await getMessages({ locale });  // 使用获取的 locale 来获取消息
  const t = await getTranslations('HomeNav');  // 获取翻译文本

  // 校验 locale 是否有效
  // if (!routing.locales.includes(locale as "en")) {
  //   notFound();
  // }

  // 生成导航链接
  const links = [
    { href: '/my', label: t('my') },
    { href: '/weather', label: t('weather') },
    { href: '/air', label: t('air') },
    { href: '/map', label: t('map') },
  ];

  return (
    <html lang={locale}>
      <body>
        <NextIntlClientProvider locale={locale} messages={messages}>
          <div className="flex h-screen">
            <nav className="w-48 bg-gray-100">
              <ul className="space-y-2">
                {links.map((link) => (
                  <li key={link.href}>
                    <Link 
                      href={link.href}
                      className="block px-4 py-2 text-gray-700 hover:bg-gray-200 rounded-md transition-colors duration-200"
                    >
                      {link.label}
                    </Link>
                  </li>
                ))}
              </ul>
            </nav>
            <main className="flex-1">
              {children}
            </main>
          </div>
        </NextIntlClientProvider>
      </body>
    </html>
  );
}
